{"version":3,"file":"public/javascripts/app.js","sources":["app/config/app.coffee","app/config/router.coffee","app/config/store.coffee","app/controllers/IndexController.coffee","app/fixtures/filters.coffee","app/fixtures/groups.coffee","app/initialize.coffee","app/models/Filter.coffee","app/models/Group.coffee","app/routes/IndexRoute.coffee","app/templates/application.hbs","app/templates/dropdown.hbs","app/templates/index.hbs","app/templates/options.hbs","app/views/DropdownView.coffee","app/views/OptionsView.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AALA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AALA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3EA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;;A,CCAA;;AACA;AACA;AACA;AACA;AAJA;;A,CCAA;;AACA;AACA;AACA;AACA;AAJA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApEA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;;A","sourcesContent":["module.exports = Ember.Application.create({\n  LOG_TRANSITIONS: true,\n  LOG_TRANSITIONS_INTERNAL: true,\n  rootElement: '#brooklyn-united'\n});\n","module.exports = App.Router.map(function() {\n  return this.route('filter', {\n    path: '/filter/*params'\n  });\n});\n","App.Adapter = DS.RESTAdapter.extend({\n  host: 'http://united.dev',\n  namespace: 'api/1'\n});\n\nApp.Serializer = DS.RESTSerializer.extend({\n  normalize: function(property, hash, type) {\n    var json, prop, value;\n    json = {};\n    for (prop in hash) {\n      value = hash[prop];\n      json[prop.camelize()] = value;\n    }\n    return this._super(property, json, type);\n  }\n});\n\nmodule.exports = App.Store = DS.Store.extend({\n  adapter: App.Adapter\n});\n","module.exports = App.IndexController = Ember.ObjectController.extend({\n  content: [],\n  isFiltered: false,\n  actions: {\n    filter: function() {\n      this.toggleProperty('isFiltered');\n      $('body').animate({\n        scrollTop: $(window).height()\n      });\n      return setTimeout((function() {\n        var feed, msnry;\n        feed = document.querySelector('#feed');\n        return msnry = new Masonry(feed, {\n          columnWidth: 240,\n          itemSelector: '.block'\n        });\n      }), 100);\n    }\n  }\n});\n","module.exports = App.Filter.FIXTURES = [\n  {\n    id: 1,\n    title: 'potential client',\n    group: 1\n  }, {\n    id: 2,\n    title: 'curious individual',\n    group: 1\n  }, {\n    id: 3,\n    title: 'potential employee',\n    group: 1\n  }, {\n    id: 4,\n    title: 'all',\n    group: 2\n  }, {\n    id: 5,\n    title: 'video',\n    group: 2\n  }, {\n    id: 6,\n    title: 'interactive',\n    group: 2\n  }, {\n    id: 7,\n    title: 'branding',\n    group: 2\n  }, {\n    id: 8,\n    title: 'campaign',\n    group: 2\n  }, {\n    id: 9,\n    title: 'whole',\n    group: 3\n  }, {\n    id: 10,\n    title: 'development',\n    group: 3\n  }, {\n    id: 11,\n    title: 'design',\n    group: 3\n  }, {\n    id: 12,\n    title: 'partners',\n    group: 3\n  }, {\n    id: 13,\n    title: 'office view',\n    group: 4\n  }, {\n    id: 14,\n    title: 'capabilities',\n    group: 4\n  }, {\n    id: 15,\n    title: 'relaxin\\' time',\n    group: 4\n  }, {\n    id: 16,\n    title: 'neighborhood',\n    group: 4\n  }, {\n    id: 17,\n    title: 'oscar',\n    group: 5\n  }, {\n    id: 18,\n    title: 'playlist',\n    group: 5\n  }\n];\n","module.exports = App.Group.FIXTURES = [\n  {\n    id: 1,\n    title: 'viewers',\n    filters: [1, 2, 3]\n  }, {\n    id: 2,\n    title: 'work',\n    filters: [4, 5, 6, 7, 8]\n  }, {\n    id: 3,\n    title: 'team',\n    filters: [9, 10, 11, 12]\n  }, {\n    id: 4,\n    title: 'culture',\n    filters: [13, 14, 15, 16]\n  }, {\n    id: 5,\n    title: 'misc',\n    filters: [17, 18]\n  }\n];\n","var folderOrder;\n\nwindow.App = require('config/app');\n\nrequire('config/router');\n\nrequire('config/store');\n\nfolderOrder = ['initializers', 'mixins', 'routes', 'models', 'fixtures', 'views', 'controllers', 'helpers', 'templates', 'components'];\n\nfolderOrder.forEach(function(folder) {\n  return window.require.list().filter(function(module) {\n    return new RegExp(\"^\" + folder + \"/\").test(module);\n  }).forEach(function(module) {\n    return require(module);\n  });\n});\n","module.exports = App.Filter = DS.Model.extend({\n  title: DS.attr('string'),\n  group: DS.belongsTo('group')\n});\n","module.exports = App.Group = DS.Model.extend({\n  title: DS.attr('string'),\n  filters: DS.hasMany('filter')\n});\n","module.exports = App.IndexRoute = Ember.Route.extend({\n  model: function() {\n    return this.store.find('group');\n  },\n  setupController: function(controller, model) {\n    return controller.set('groups', model);\n  }\n});\n","Ember.TEMPLATES['application'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', hashTypes, hashContexts, escapeExpression=this.escapeExpression;\n\n\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"outlet\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\");\n  return buffer;\n  \n});","Ember.TEMPLATES['dropdown'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', hashContexts, hashTypes, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<div \");\n  hashContexts = {'class': depth0};\n  hashTypes = {'class': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.bindAttr.call(depth0, {hash:{\n    'class': (\":cheech view.isActive:\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"></div>\\n<span \");\n  hashContexts = {'class': depth0};\n  hashTypes = {'class': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.bindAttr.call(depth0, {hash:{\n    'class': (\":display view.isActive\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"view.displayName\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</span>\\n\");\n  hashContexts = {'contentBinding': depth0,'isActiveBinding': depth0};\n  hashTypes = {'contentBinding': \"STRING\",'isActiveBinding': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"App.OptionsView\", {hash:{\n    'contentBinding': (\"view.group.filters\"),\n    'isActiveBinding': (\"view.isActive\")\n  },contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\");\n  return buffer;\n  \n});","Ember.TEMPLATES['index'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashContexts, hashTypes, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n  <div class=\\\"panel content\\\">\\n    <div class=\\\"container\\\">\\n      <button type=\\\"reset\\\" id=\\\"reset\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"filter\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Reset</button>\\n      <ul id=\\\"project-list\\\">\\n        <li><a href=\\\"#\\\">Gary Hutswit Films</a></li>\\n        <li><a href=\\\"#\\\">Gucci</a></li>\\n        <li><a href=\\\"#\\\" class=\\\"active\\\">Dumbo Townhouses</a></li>\\n        <li><a href=\\\"#\\\">Hunt Library</a></li>\\n        <li><a href=\\\"#\\\">185 Plymouth</a></li>\\n      </ul>\\n    </div>\\n    <nav id=\\\"paginator\\\">\\n      <a href=\\\"#\\\" class=\\\"carot left\\\">&lt;</a>\\n      <span class=\\\"index\\\">1 of 7</span>\\n      <a href=\\\"#\\\" class=\\\"carot right\\\">&gt;</a>\\n    </nav>\\n    <div id=\\\"feed\\\" class=\\\"feed container\\\">\\n      <div class=\\\"block w4\\\">\\n        <img src=\\\"/files/dh-1.jpg\\\">\\n      </div>\\n      <div class=\\\"block twitter w2\\\">\\n        <p>Check out our new site dumbotownhouses on siteinspire <a href=\\\"#\\\">shfere.com</a></p>\\n      </div>\\n      <div class=\\\"block medium w2\\\">\\n        <img src=\\\"/files/dh-4.jpg\\\">\\n      </div>\\n      <div class=\\\"block medium w2\\\">\\n        <img src=\\\"/files/dh-2.jpg\\\">\\n      </div>\\n      <div class=\\\"block medium w2\\\">\\n        <img src=\\\"/files/dh-3.jpg\\\">\\n      </div>\\n      <div class=\\\"block small w1 ig\\\">\\n        <img src=\\\"/files/dg-ig-1.jpg\\\">\\n        <div class=\\\"backer\\\"></div>\\n        <i class=\\\"icon-ig\\\">instagram</i>\\n      </div>\\n      <div class=\\\"block small w1 user\\\">\\n        <img src=\\\"/files/goodhue.jpg\\\">\\n        <div class=\\\"backer\\\"></div>\\n        <hgroup>\\n          <h2>Chris Goodhue</h2>\\n          <h3>Design Associate</h3>\\n        </hgroup>\\n      </div>\\n      <div class=\\\"block large w4\\\">\\n        <img src=\\\"/files/dh-5.jpg\\\">\\n      </div>\\n    </div>\\n  </div>\\n\");\n  return buffer;\n  }\n\n  data.buffer.push(\"<div class=\\\"hero madlibs panel\\\">\\n  <header id=\\\"madlib-header\\\">\\n    <img src=\\\"/img/logo.png\\\" alt=\\\"Brooklyn United\\\" id=\\\"logo\\\">\\n    <h1>Hello</h1>\\n    <h2>We are Brooklyn United</h2>\\n  </header>\\n  <div id=\\\"filters\\\">\\n    <h3>Nice to Meet You</h3>\\n    <div class=\\\"filter-group\\\">\");\n  hashContexts = {'contentBinding': depth0,'key': depth0,'id': depth0};\n  hashTypes = {'contentBinding': \"STRING\",'key': \"STRING\",'id': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"App.DropdownView\", {hash:{\n    'contentBinding': (\"groups\"),\n    'key': (\"viewers\"),\n    'id': (\"viewers-select\")\n  },contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\", We'd love to show you \");\n  hashContexts = {'contentBinding': depth0,'key': depth0,'id': depth0};\n  hashTypes = {'contentBinding': \"STRING\",'key': \"STRING\",'id': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"App.DropdownView\", {hash:{\n    'contentBinding': (\"groups\"),\n    'key': (\"work\"),\n    'id': (\"work-select\")\n  },contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" that \");\n  hashContexts = {'contentBinding': depth0,'key': depth0,'id': depth0};\n  hashTypes = {'contentBinding': \"STRING\",'key': \"STRING\",'id': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"App.DropdownView\", {hash:{\n    'contentBinding': (\"groups\"),\n    'key': (\"team\"),\n    'id': (\"team-select\")\n  },contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" has collaborated on.</div>\\n    <div class=\\\"filter-group\\\"><small>Please also check out our \");\n  hashContexts = {'contentBinding': depth0,'key': depth0,'id': depth0};\n  hashTypes = {'contentBinding': \"STRING\",'key': \"STRING\",'id': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"App.DropdownView\", {hash:{\n    'contentBinding': (\"groups\"),\n    'key': (\"culture\"),\n    'id': (\"culture-select\")\n  },contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" and \");\n  hashContexts = {'contentBinding': depth0,'key': depth0,'id': depth0};\n  hashTypes = {'contentBinding': \"STRING\",'key': \"STRING\",'id': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"App.DropdownView\", {hash:{\n    'contentBinding': (\"groups\"),\n    'key': (\"misc\"),\n    'id': (\"misc-select\")\n  },contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" while you're here!</small></div>\\n    <button type=\\\"button\\\" id=\\\"view\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"filter\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">View</button>\\n  </div>\\n</div>\\n\");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"isFiltered\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\");\n  return buffer;\n  \n});","Ember.TEMPLATES['options'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashTypes, hashContexts, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n  <span class=\\\"option-item\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"item.title\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</span>\\n\");\n  return buffer;\n  }\n\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"item\", \"in\", \"view.content\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\");\n  return buffer;\n  \n});","module.exports = App.DropdownView = Ember.View.extend({\n  templateName: 'dropdown',\n  tagName: 'span',\n  classNames: ['dropdown'],\n  selected: null,\n  isActive: false,\n  init: function() {\n    var groupFilter, key, length;\n    key = this.get('key');\n    groupFilter = this.get('content').filter(function(record) {\n      return record.get('title') === key;\n    });\n    this.set('group', groupFilter[0]);\n    length = this.get('group.filters').toArray().length;\n    key = Math.floor(Math.random() * length);\n    this.selected = this.get('group.filters').objectAt(key);\n    return this._super([].slice.call(arguments));\n  },\n  displayName: (function() {\n    if (this.selected != null) {\n      return this.selected.get('title');\n    }\n  }).property('selected'),\n  click: function() {\n    return this.toggleProperty('isActive');\n  }\n});\n","module.exports = App.OptionsView = Ember.CollectionView.extend({\n  classNames: ['options-list'],\n  classNameBindings: ['isActive'],\n  tagName: 'ul',\n  itemViewClass: Ember.View.extend({\n    tagName: 'li',\n    classNames: ['option-item'],\n    classNameBindings: ['isSelected'],\n    template: Ember.Handlebars.compile('{{view.content.title}}'),\n    isSelected: (function() {\n      var current;\n      current = this.get('parentView.parentView.selected.id');\n      if (current === this.get('content.id')) {\n        return 'selected';\n      }\n    }).property('parentView.parentView.selected'),\n    click: function() {\n      return this.set('parentView.parentView.selected', this.get('content'));\n    }\n  })\n});\n"]}